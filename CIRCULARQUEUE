#include<stdio.h>  //in queue we insert from rear and we delete from front 
#define n 4         //while in circular queue we follow that front=(front+1)mod n; and rear=(rear+1)mod n; 
int queue[4];
int rear=0;
int front=0;
void print(){
	int i;
	for(i=1;i<n;i++)
	{
		printf("%d->",queue[i]);
	}
	printf("\n");
}
int dequeue()
{
	if(front==rear)
	{
		printf("underflow");
		return -1;
	}
	else{
		front=(front+1)%4;
		return queue[front];
	}
}
void enqueue(int item)
{
    rear=(rear+1)%4;
    printf("rear is %d \n",rear);
	if(rear==front)
	{
		printf("queue is full\n");
		if(rear==0)
		{
			rear=n-1; //if starting positio =n that means rear=front=0 then we will do rear=n-1 onre space left                       ->>>>>>>>>>>>>here we are using only 3 elemnts of 4 nad one space is going waste out of 4.
		}
		else{
			rear=rear-1;
		}
		return;
		
		
	}		
    else{
			queue[rear]=item;
			return;
		}
		
	
}
void main()
{
    enqueue(1);
    
    enqueue(2);
    
   enqueue(3);

   enqueue(14);
   print();
   enqueue(5);
   print();
   printf("1st dequeue is %d and 2nd dequeue id %d",dequeue(),dequeue());
   
}



//output=====rear is 1
//rear is 2
//rear is 3
//rear is 0
//queue is full
//1->2->3->
//rear is 0
//queue is full
//1->2->3->
//1st dequeue is 2 and 2nd dequeue id 1
//--------------------------------
//Process exited after 0.1001 seconds with return value 37
//Press any key to continue . . .
